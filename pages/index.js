import React, { useState } from 'react';
import TextComponente from "../components/card"
import CreateNoteModal from "../components/createNoteModal"
import NoteModal from '../components/noteModal';
import {FaRegWindowClose} from "react-icons/fa";
import { CiCirclePlus } from "react-icons/ci";



function NotesApp() {
  const [notes, setNotes] = useState([
    {
      id:"1",
      title:"Compra de produtos de limpeza",
      description:"Ir ao mercado e comprar produtos de limpeza, como detergente, esponja, água sanitária, etc.",
      date:Date.now()
    },
    {
      id:"2",
      title:"Manutenção da jardinagem",
      description:"Cuidar da jardinagem, regar as plantas, podar os galhos, colher flores e frutas, etc.",
      date:Date.now()
    },
    {
      id:"3",
      title:"Organização do armário",
      description:"Organizar o armário, dobrar as roupas, separar os itens por tipo, arrumar os sapatos, etc.",
      date:Date.now()
    },
    {
      id:"4",
      title:"Reparos na casa",
      description:"Fazer reparos na casa, como trocar lâmpadas queimadas, consertar torneiras vazando, trocar fechaduras, etc.",
      date:Date.now()
    },
    {
      id:"5",
      title:"Fazer exercícios físicos",
      description:"Praticar exercícios físicos, como caminhar, correr, nadar, malhar, etc.",
      date:Date.now()
    },
  ]); // cria o estado para armazenar as notas
  const [openCreateNoteModal, setOpenCreateNoteModal] = useState(false)
  const [select, setSelect] = useState(null)

  function addNote(event) {
    event.preventDefault(); // impede o envio do formulário

    const form = event.target;
    const title = form.note.value; // obtém o valor do campo de texto "note"
    const description = form.description.value

    setNotes([...notes, {title, description, date:Date.now(), id:(Math.random() + 1).toString(36).substring(7)}]); // adiciona a nova nota ao estado
    setOpenCreateNoteModal(false)
  }
  function deleteNote(id) {
    setNotes([...notes.filter(e=>e.id != id)]); // adiciona a nova nota ao estado
  }

  function editNote(event) {
    event.preventDefault(); // impede o envio do formulário

    const form = event.target;
    const title = form.note.value; // obtém o valor do campo de texto "note"
    const description = form.description.value
    console.log(title)
    console.log(description)
    setNotes([...notes.map(e=>e.id == select.id ? {...e, title, description} : e)]); // adiciona a nova nota ao estado
    setSelect(false)
  }

console.log(notes)

  
  return (
    <div>
      <div className="grid">
          {
            notes.length
            ?
            notes.map(note => (
              <TextComponente key={note.id} note={note} deleteNote={()=>deleteNote(note.id)} select={()=>setSelect(note)}/>
            ))
            :<h1>Nenhuma nota</h1>
          }
      </div>
      <CiCirclePlus className="myButton" onClick={()=>setOpenCreateNoteModal(true)} size={75} color="white" type="submit"/>
      {/* <button className="myButton" onClick={()=>setOpenCreateNoteModal(true)} type="submit">Criar nova anotação</button> */}
      <CreateNoteModal isOpen={openCreateNoteModal} onClose={()=>setOpenCreateNoteModal(false)}>
        <form className="form" onSubmit={addNote}>
          <label htmlFor="note" className="formTitle">Nova Nota</label>
          <p className="inputTitle">Titulo</p>
          <input className="input"  type="text" id="note" />
          <p className="inputTitle">Descrição</p>
          <input className="bigInput" type="text" id="description" />

          
          <button className="addButton" type="submit">Adicionar</button>
          <FaRegWindowClose className="closeButton" onClick={()=>setOpenCreateNoteModal(false)} color={"red"} size={25}/>
        </form>
      </CreateNoteModal>
      <NoteModal isOpen={select} onClose={()=>setSelect(null)} note={select} editNote={editNote}>
        <form className="form" onSubmit={editNote}>
          <label htmlFor="note" className="formTitle">Editar nota</label>
          <p className="inputTitle">Titulo</p>
          <input className="input"  type="text" id="note" defaultValue={select?.title}/>
          <p className="inputTitle">Descrição</p>
          <input className="bigInput" type="text" id="description" defaultValue={select?.description}/>

          
          <button className="addButton" type="submit">Adicionar</button>
          <FaRegWindowClose className="closeButton" onClick={()=>setOpenCreateNoteModal(false)} color={"red"} size={25}/>
        </form>
      </NoteModal>
    </div>
  );
}

export default NotesApp;




// import Head from 'next/head'
// import Image from 'next/image'
// import { Inter } from '@next/font/google'
// import styles from '../styles/Home.module.css'

// const inter = Inter({ subsets: ['latin'] })

// export default function Home() {
//   return (
//     <>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <main className={styles.main}>
//         <div className={styles.description}>
//           <p>
//             Get started by editing&nbsp;
//             <code className={styles.code}>pages/index.js</code>
//           </p>
//           <div>
//             <a
//               href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//               target="_blank"
//               rel="noopener noreferrer"
//             >
//               By{' '}
//               <Image
//                 src="/vercel.svg"
//                 alt="Vercel Logo"
//                 className={styles.vercelLogo}
//                 width={100}
//                 height={24}
//                 priority
//               />
//             </a>
//           </div>
//         </div>

//         <div className={styles.center}>
//           <Image
//             className={styles.logo}
//             src="/next.svg"
//             alt="Next.js Logo"
//             width={180}
//             height={37}
//             priority
//           />
//           <div className={styles.thirteen}>
//             <Image
//               src="/thirteen.svg"
//               alt="13"
//               width={40}
//               height={31}
//               priority
//             />
//           </div>
//         </div>

//         <div className={styles.grid}>
//           <a
//             href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Docs <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Find in-depth information about Next.js features and&nbsp;API.
//             </p>
//           </a>

//           <a
//             href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Learn <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Learn about Next.js in an interactive course with&nbsp;quizzes!
//             </p>
//           </a>

//           <a
//             href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Templates <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Discover and deploy boilerplate example Next.js&nbsp;projects.
//             </p>
//           </a>

//           <a
//             href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Deploy <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Instantly deploy your Next.js site to a shareable URL
//               with&nbsp;Vercel.
//             </p>
//           </a>
//         </div>
//       </main>
//     </>
//   )
// }
